{"version":3,"sources":["components/Map.js","components/NewPathForm.js","firebase.js","utilites.js","components/PathPage.js","components/PathItem.js","components/PathList.js","App.js","serviceWorker.js","index.js"],"names":["Map","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","defaultCenter","lat","lng","NewPathForm","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTitleChange","event","setState","pathName","target","value","onShortDescChange","shortDescription","onFullDescChange","fullDescription","onSubmit","preventDefault","addPathToList","state","inherits","createClass","key","_this$state","Container","className","type","aria-label","onClick","toggleForm","aria-hidden","Col","xs","Form","Group","Label","Control","onChange","controlId","as","rows","maxLength","Text","Button","variant","googleMapURL","loadingElement","style","height","containerElement","mapElement","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","window","collectIdsAndDocs","doc","objectSpread","id","data","PathPage","display","title","fullDesc","changeElected","elected","removeItem","isActive","md","Tab","Content","Pane","eventKey","concat","href","PathItem","componentDidMount","isElected","updateElected","update","displayItem","toggleItem","prevState","moveDown","moveUp","_this$props","shortDesc","selectItem","electedClass","Fragment","ListGroup","Item","action","PathList","pathList","map","item","PathItem_PathItem","App","asyncToGenerator","regenerator_default","mark","_callee","snapshot","wrap","_context","prev","next","collection","orderBy","get","sent","docs","stop","_ref2","_callee2","docRef","newPath","_context2","add","_ref3","toConsumableArray","_x","_x2","_x3","apply","arguments","showForm","search","items","query","length","filter","includes","onSearchChange","index","findIndex","selectedIndex","_ref4","_callee3","newData","_context3","delete","_x4","_x5","removed","splice","_this$state2","_this$state3","filteredItems","Navbar","Brand","disabled","NewPathForm_NewPathForm","Row","placeholder","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef542612.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GoogleMap, withScriptjs, withGoogleMap } from 'react-google-maps'; \r\n\r\nexport function MyMapComponent(props) {\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={10}\r\n      defaultCenter={{ lat: 49.26, lng: 32.03 }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const Map = withScriptjs(withGoogleMap(MyMapComponent));","import React, { Component } from 'react';\nimport { Button, Form, Container, Col } from 'react-bootstrap';\nimport { Map } from './Map';\n\n\nexport class NewPathForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pathName: '',\n      shortDescription: '',\n      fullDescription: '',\n    };\n  };\n\n  onTitleChange = (event) => {\n    this.setState({\n      pathName: event.target.value\n    });\n  };\n\n  onShortDescChange = (event) => {\n    this.setState({\n      shortDescription: event.target.value\n    });\n  };\n  \n  onFullDescChange = (event) => {\n    this.setState({\n      fullDescription: event.target.value\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.addPathToList(this.state.pathName, this.state.shortDescription, this.state.fullDescription);\n    this.setState({\n      pathName: '',\n      shortDescription: '',\n      fullDescription: ''\n    }) ;\n  };\n\n  render() {  \n    const {\n      pathName,\n      shortDescription,\n      fullDescription\n    } = this.state;\n\n    return (\n\n      <Container  className=\"bg-light add-path-container justify-content-start\">\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.props.toggleForm}>\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <Col xs={6}>\n        <Form onSubmit={this.onSubmit}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\" value={pathName} onChange={this.onTitleChange}/>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Short description</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\" maxLength=\"160\" value={shortDescription} onChange={this.onShortDescChange} />\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Full description</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"4\" value={fullDescription} onChange={this.onFullDescChange} />\n          </Form.Group>\n          <Form.Group>\n          <Form.Text>\n            Length \n          </Form.Text>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Add path\n          </Button>\n        </Form>\n        </Col>\n        <Col xs={6}>\n          <Map\n            googleMapURL={'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBz7Oa8C8MOOd20FJSUaYQc0lrlLkvn0m4'}\n            loadingElement={<div style={{ height: '400px' }} />}\n            containerElement={<div style={{ height: '400px' }} />}\n            mapElement={<div style={{ height: '400px' }} />}\n          />\n        </Col>    \n      </Container>\n    );\n  };\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDOiyHKJdnV8ZVxFN6N_h6RFK9evCnDoTw',\n  authDomain: 'list-of-paths.firebaseapp.com',\n  databaseURL: 'https://list-of-paths.firebaseio.com',\n  projectId: 'list-of-paths',\n  storageBucket: '',\n  messagingSenderId: '31567877341',\n  appId: '1:31567877341:web:a60d29794325afa2'\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\n\nwindow.firebase = firebase;\n\nexport default firebase;\n","export const collectIdsAndDocs = doc => {\n  return { \n    id: doc.id, ...doc.data() \n  }; \n}\n","import React from 'react';\nimport { Col, Tab } from 'react-bootstrap';\nimport { Map } from './Map';\n\n\nexport function PathPage(props) {\n  const {\n    display,\n    id,\n    title,\n    fullDesc,\n    changeElected,\n    elected,\n    removeItem,\n   } = props\n\n  const className = 'desc'\n  const isActive = display ? className + ' active' : className + ' not-active';\n\n  return (\n    <Col md={6} className={isActive}>\n      <Tab.Content className=\" pr-2 pb-2\">\n        <Tab.Pane eventKey={`${id}`}>\n          <h3 >{title}</h3>\n          <p>{fullDesc}</p>\n          <Map\n            googleMapURL={'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBz7Oa8C8MOOd20FJSUaYQc0lrlLkvn0m4'}\n            loadingElement={<div style={{ height: '400px' }} />}\n            containerElement={<div style={{ height: '400px' }} />}\n            mapElement={<div style={{ height: '400px' }} />}\n          />\n          <div className=\"d-flex align-items-end flex-column mt-2\">\n            <a href=\"1\" className=\"text-primary d-block\" onClick={changeElected}>{elected ? 'Remove from favorites' : 'Add to favorites'}</a>\n            <a href=\"2\" className=\"text-danger d-block\" onClick={(event) => removeItem(event, id)}>Remove</a>\n          </div>\n        </Tab.Pane>\n      </Tab.Content>\n    </Col>\n  )\n}\n\n","import React, { Component } from 'react';\nimport { ListGroup, Col } from 'react-bootstrap';\nimport { firestore } from '../firebase';\nimport { PathPage } from './PathPage';\n\nexport class PathItem extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      elected: null,\n      display: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      elected: this.props.isElected\n    });\n  }\n\n  updateElected = (elected) => {\n    const dataRef = firestore.doc(`data/${this.props.id}`);\n    dataRef.update({elected: !elected});\n  }\n\n  displayItem = () => {\n    this.setState({\n      display: true\n    });\n  }\n\n  toggleItem = () => {\n    this.setState((prevState) => {\n      return {\n        display: !prevState.display\n      };\n    });\n  }\n\n  changeElected = (event, id) => {\n    event.preventDefault();\n    const { elected } = this.state;\n\n    if (!elected) {\n      this.toggleItem();\n      this.setState((prevState) => {\n        return {\n          elected: !prevState.elected\n        };\n      });\n      this.props.moveUp(event, id);\n    } else {\n      this.toggleItem();\n      this.setState((prevState) => {\n        return {\n          elected: !prevState.elected\n        };\n      });\n      \n      this.props.moveDown(event, id);\n    }\n    this.updateElected(elected);\n  };\n\n  render() {\n    const {\n      title,\n      shortDesc,\n      fullDesc,\n      id,\n      selectItem,\n      removeItem,\n    } = this.props\n\n    const { display, elected } = this.state;\n    const electedClass = elected \n      ? 'position-relative elected'\n      : 'position-relative';\n\n    return (\n      <>\n        <Col md={6} onClick={this.displayItem} className=\"mb-1 pl-0\">\n          <ListGroup>\n            <ListGroup.Item action href={`${id}`} onClick={(event) => selectItem(event, id)}>\n              <h5 className={electedClass}>{title}</h5>\n              <p>{shortDesc}</p>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <PathPage\n          display={display}\n          id={id}\n          title={title}\n          fullDesc={fullDesc}\n          changeElected={this.changeElected}\n          elected={elected}\n          removeItem={removeItem}\n        />\n      </>\n    );\n  }\n}","import React from 'react';\nimport { PathItem } from './PathItem';\n\nexport function PathList (props) {\n  const {\n    selectItem,\n    removeItem,\n    moveUp,\n    moveDown,\n    changeElected,\n    pathList\n  } = props\n\n  return (\n    <div>\n      {pathList.map(item => {\n        return (\n          <PathItem\n            key={item.id}\n            selectItem={selectItem}\n            removeItem={removeItem}\n            moveUp={moveUp}\n            moveDown={moveDown}\n            changeElected={changeElected}\n            isElected={item.elected}\n            id={item.id}\n            title={item.title}\n            shortDesc={item.shortDesc}\n            fullDesc={item.fullDesc}\n          />\n        )\n      })}      \n    </div>\n  );\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { NewPathForm } from './components/NewPathForm';\nimport { Container, Col, Button, Navbar, Form, Row, Tab } from 'react-bootstrap';\nimport { firestore } from './firebase';\nimport { collectIdsAndDocs } from './utilites';\nimport { PathList } from './components/PathList';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      data: [], \n      showForm: false,\n      query: '',\n      id: null,\n      selectedIndex: null\n    };\n  }\n\n  componentDidMount = async () => {\n    const snapshot = await firestore.collection('data').orderBy(\"elected\", \"desc\").get();\n    const data = snapshot.docs.map(collectIdsAndDocs);\n\n    this.setState({ data });\n\n  }\n  \n  addPathToList = async (title, shortDesc, fullDesc) => {\n    const docRef = await firestore.collection('data').add({ title, shortDesc, fullDesc, elected: false });\n    const doc = await docRef.get();\n    const newPath = collectIdsAndDocs(doc)\n    \n    this.setState(({ data }) => {\n      return {\n        data: [...data, newPath]\n      }\n    })\n    \n    this.toggleForm();\n  };\n\n  toggleForm = () => {\n    this.setState((prevState) => {\n      return {\n        showForm: !prevState.showForm\n      };\n    });\n  };\n\n  search = (items, query) => {\n    if (query.length === 0) {\n      return items;\n    } else {\n      return items.filter(item => {\n        return item.title.includes(query) || item.fullDesc.includes(query);\n      });\n    }\n  };\n\n  onSearchChange = (event) => {\n    this.setState({\n      query: event.target.value\n    });\n  };\n\n  selectItem = (event, id) => {\n    event.preventDefault();\n\n    const index = this.state.data.findIndex(item => {return item.id === id}) \n\n    this.setState({\n      selectedIndex: index\n    });\n  };\n\n  removeItem = async (event, id) => {\n    event.preventDefault();\n\n    await firestore.doc(`data/${id}`).delete();\n    \n    const newData = this.state.data;\n    const data = newData.filter(item => item.id !== id);\n\n    this.setState({\n      data\n    });\n  };\n  \n  moveUp = (event, id) => {\n    const { data, selectedIndex } = this.state;\n    if (selectedIndex > 0 || selectedIndex !== null) {\n      const removed = data.splice(selectedIndex, 1);\n\n      this.setState((prevState) => {\n        return {\n          data: [...removed, ...prevState.data],\n          selectedIndex: null\n        }\n      });\n    }\n    this.selectItem(event, id);\n  };\n\n  moveDown = (event,id) => {\n    const { data, selectedIndex } = this.state;\n    const removed = data.splice(selectedIndex, 1);\n  \n    this.setState((prevState) => {\n      return {\n        data: [...prevState.data, ...removed],\n        selectedIndex: null \n      }\n    });\n    this.selectItem(event,id);\n  };\n\n  render() {\n    const {\n      data,\n      showForm,\n      query\n    } = this.state;\n\n    const filteredItems = this.search(data, query);\n\n    return (\n      <Container>\n        <Navbar className=\"d-flex justify-content-between header\">\n          <Navbar.Brand href=\"#home\">Saunter</Navbar.Brand>\n          <Button onClick={this.toggleForm} disabled={showForm ? true : false}>Add path</Button>\n        </Navbar>\n\n        {showForm \n          ? <NewPathForm\n              addPathToList={this.addPathToList}\n              toggleForm={this.toggleForm}\n            />\n          : null\n        }\n        \n        <Tab.Container id=\"list-group-tabs-example\">\n          <Container className=\"main-container\">\n            <Row>\n              <Col md={6} className=\"search\">\n                <Form.Control type=\"text\" placeholder=\"Search...\" className=\"pr-5\" value={query} onChange={this.onSearchChange}/>\n              </Col>\n            </Row> \n            <PathList\n              pathList={filteredItems}\n              selectItem={this.selectItem}\n              removeItem={this.removeItem}\n              moveUp={this.moveUp}\n              moveDown={this.moveDown}\n              changeElected={this.changeElected}\n             />\n          </Container>\n        </Tab.Container>      \n      </Container>        \n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}